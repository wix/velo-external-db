# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_pull_request:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test
  test_postgres:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Runs a single command using the runners shell
      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull postgres

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test:postgres

  test_spanner:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Runs a single command using the runners shell
      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull spanner

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test:spanner

  test_mysql:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Runs a single command using the runners shell
      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull mysql

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test:mysql

  test_mssql:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Runs a single command using the runners shell
      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull mssql

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test:mssql


  test_firestore:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Runs a single command using the runners shell
      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull firestore

      # Runs a single command using the runners shell
      - name: Installing Lerna
        run: npm install

      # Runs a set of commands using the runners shell
      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      # Runs a set of commands using the runners shell
      - name: Testing
        run: npm run test:firestore

