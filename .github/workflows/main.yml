name: CI

on:
  push:
    branches: "*"

  workflow_dispatch:

jobs:
  test_main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test
  test_postgres:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull postgres

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test:postgres

  test_spanner:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull spanner

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test:spanner

  test_mysql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull mysql

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test:mysql

  test_mssql:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull mssql

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test:mssql


  test_firestore:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"

      - name: Downloading Docker compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Downloading Docker images for the test
        run: |
          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull firestore

      - name: Installing Lerna
        run: npm install

      - name: Install dependencies of the homemade packages.
        run: npm run build:dev

      - name: Testing
        run: npm run test:firestore

#
#  test_mongo:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2
#        with:
#          node-version: 14
#          cache: "npm"
#
#      - name: Downloading Docker compose V2
#        run: |
#          mkdir -p ~/.docker/cli-plugins
#          curl -sSL https://github.com/docker/compose-cli/releases/download/v2.0.0-rc.2/docker-compose-linux-amd64 -o ~/.docker/cli-plugins/docker-compose
#          chmod +x ~/.docker/cli-plugins/docker-compose
#          docker compose version
#
#      - name: Downloading Docker images for the test
#        run: |
#          docker-compose --ansi never --file packages/velo-external-db/test/resources/docker-compose.yaml pull mongo
#
#      - name: Installing Lerna
#        run: npm install
#
#      - name: Install dependencies of the homemade packages.
#        run: npm run build:dev
#
#      - name: Testing
#        run: npm run test:mongo

